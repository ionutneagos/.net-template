{
  "Serilog": {
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Microsoft": "Warning",
        "Microsoft.Hosting.Lifetime": "Information"
      }
    },
    "Filter": [
      {
        "Name": "ByExcluding",
        "Args": { "expression": "@mt = 'An unhandled exception has occurred while executing the request.'" }
      }
    ],
    "WriteTo": [
      {
        "Name": "File",
        "Args": {
          "path": "./logs/log-.txt",
          "rollingInterval": "Day"
        }
      },
      {
        "Name": "Seq",
        "Args": { "serverUrl": "http://localhost:5341" }
      }
    ]
  },
  "ApiVersioning": {
    "AddBearerSecurityDefinition": true,
    "ApiTitle": "Api",
    "ApiDescription": "List all endpoints. <br/><br/><b>Build#:</b>1.0.0"
  },
  "Database": {
    "CatalogConnectionString": "Server=[YourSqlServer];User ID=[Your Sql User];Password=[Your Sql User Password];Initial Catalog=[Catalog Data Base];Persist Security Info=True; MultipleActiveResultSets=True;",
    "TenantConnectionString": "Server=[YourSqlServer];User ID=[Your Sql User];Password=[Your Sql User Password];Initial Catalog=[TenantDb-{$TenantId}];Persist Security Info=True; MultipleActiveResultSets=True;",
    "TrackingConnectionString": "Server=[YourSqlServer];User ID=[Your Sql User];Password=[Your Sql User Password];Initial Catalog=[App Tracking];Persist Security Info=True; MultipleActiveResultSets=True;"
  },
  "Authentication": {
    "Jwt": {
      "Secret": "28a12154-6e32-4255-adad-1a9c3bc77dc4-dev",
      "Issuer": "Vin.Web.Service",
      "Audience": "Vin.Web.ClientApp",
      "Subject": "Vin.Web.ClientAccess",
      "AccessTokenExpiresInMinutes": 60,
      "RefreshTokenExpiresInHours": 240
    }
  },
  "RootUser": {
    "Email": "root@root.ro",
    "Password": "NeBo@1"
  },
  "RateLimiter": {
    "RateLimitGlobalFixedWindow": {
      "UseRateLimitGlobalFixedWindow": true,
      "PolicyName": "GlobalFixedWindowPolicy",
      "PermitLimit": 1000,
      "Window": 30,
      "QueueLimit": 10,
      "AutoReplenishment": true
    },

    "RateLimitUserBasedTokenBucket": {
      "UseUserBasedPolicy": true,
      "PolicyName": "UserBasedPolicy",
      "TokenLimit": 100,
      "QueueLimit": 10,
      "ReplenishmentPeriod": 60,
      "TokensPerPeriod": 30,
      "AutoReplenishment": true
    },

    "RateLimitUserBasedSlidingWindow": {
      "UseUserBasedPolicy": true,
      "PolicyName": "UserBasedPolicy",
      "PermitLimit": 100,
      "Window": 60,
      "SegmentsPerWindow": 2,
      "QueueLimit": 10
    },

    "RateLimitTokenBucket": {
      "UseRateLimitTokenBucket": true,
      "PolicyName": "TokenBucketPolicy",
      "TokenLimit": 100,
      "QueueLimit": 10,
      "ReplenishmentPeriod": 60,
      "TokensPerPeriod": 30,
      "AutoReplenishment": true
    },
 
    "RateLimitConcurrency": {
      "UseRateLimitConcurrency": true,
      "PolicyName": "ConcurrencyPolicy",
      "PermitLimit": 100,
      "QueueLimit": 10
    },
  
    "RateLimitSlidingWindow": {
      "UseRateLimitSlidingWindow": true,
      "PolicyName": "SlidingWindowPolicy",
      "PermitLimit": 100,
      "Window": 60,
      "SegmentsPerWindow": 2,
      "QueueLimit": 10
    },
  
    "RateLimitFixedWindow": {
      "UseRateLimitFixedWindow": true,
      "PolicyName": "FixedWindowPolicy",
      "PermitLimit": 1,
      "Window": 30,
      "QueueLimit": 0
    }
  },
  "CorsOption": {
    "PolicyName": "ApiAllowedOrigins",
    "WithOrigins": [
      "*"
    ]
  }
}